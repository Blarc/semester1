/* SELECT * 
FROM stranka */
    /* SELECT id, ime
FROM agent
WHERE mesto = 'Kranj' */
    /*
ne dela
SELECT DISTINCT 
izdelek_id
FROM narocilo
*/
    /*
SELECT DISTINCT s.ime, a.ime
FROM narocilo n, stranka s, agent a
WHERE s.id = n.stranka_id AND a.id = n.agent_id
*/
    /* A
SELECT * 0.4 * n.kolicina * i.cena - (s.popust + n.marza) *0.01 * n.kolicina * i.cena AS
Dobicek
FROM narocilo n, stranka s, agent a, izdelek i
WHERE s.id = n.stranka_id AND a.id = n.agent_id AND n.izdelek_id = i.id
*/
    /* B
SELECT s1.id, s2.id, s2.mesto
FROM stranka s1, stranka s2
WHERE s1.mesto = s2.mesto AND s1.id < s2.id
*/
    /* C
SELECT DISTINCT n1.izdelek_id
FROM narocilo n1, narocilo n2
WHERE n1.izdelek_id = n2.izdelek_id AND n1.stranka_id < n2.stranka_id
*/
    /* D
SELECT DISTINCT n1.stranka_id
FROM narocilo n1, narocilo n2
WHERE n1.izdelek_id = n2.izdelek_id AND n2.agent_id = 6
*/
    /* DN 1
SELECT CONCAT('Stranki ', id, ' je ime ', ime, ' in prihaja iz ', mesto)
FROM stranka
*/
    /* A
SELECT s.ime
FROM stranka s, narocilo n
WHERE s.id = n.stranka_id AND n.izdelek_id = 2
*/
    /* B
SELECT ime
FROM stranka
WHERE 2 IN (
    SELECT izdelek_id
    FROM narocilo
    WHERE stranka_id = stranka.id)
*/
    /* C
SELECT ime 
FROM stranka
WHERE id IN (
	SELECT stranka_id
	FROM narocilo
	WHERE agent_id IN (
		SELECT id
		FROM agent
		WHERE mesto IN ('Kranj', 'Koper')
    )
)
*/
    /* A
SELECT *
FROM agent
WHERE marza <= ALL (
    SELECT marza
	FROM agent )
*/
    /* B
SELECT id
FROM agent
WHERE marza < ANY (
    SELECT marza
    FROM agent )
*/
    /* C
SELECT *
FROM stranka
WHERE 50 < ALL (
    SELECT cena
    FROM narocilo n, izdelek i
    WHERE izdelek_id = i.id AND stranka_id = stranka.id )

AND EXISTS (
    SELECT cena
    FROM narocilo n, izdelek i
    WHERE izdelek_id = i.id AND stranka_id = stranka.id )
*/
    /*







/*
SELECT ime, priimek
FROM trgovec t, dobavnica d
WHERE t.id = d.trgovec_id AND kolicina >= ALL (
    SELECT kolicina
    FROM dobavnica )
    */

/* B
SELECT *
FROM del
WHERE del.id NOT IN (
    SELECT del_id
    FROM dobavnica )
*/
DN 2
3 SELECTI + 2 NOT EXISTS = DELJENJE
*/
    


/* SQL vaje 2 */
/* 6 naloga */

/* D
SELECT de.naziv
FROM dobavnica d, del de, projekt p
WHERE
	d.del_id = de.id AND
    d.projekt_id = p.id AND
    p.mesto = 'Maribor' AND
    de.id IN (
    	SELECT d.del_id
        FROM projekt p, dobavnica d 
        WHERE
        	p.id = d.projekt_id AND
        	p.mesto = 'Kranj'
    )
*/

/* A
SELECT COUNT (c.id)
FROM cabel c, privacy p, embassy e 
WHERE
	c.privacy_id = p.id AND
    c.embassy_id = e.id AND
    p.classification = 'Confidential' AND
    e.name LIKE '%Ljubljana%' AND
    c.date >= '2000-01-01'
    
*/

/* B
SELECT COUNT(*) AS Stevilo, p.classification AS Nivo
FROM cable c, privacy p 
WHERE c.privacy_id = p.id
GROUP BY p.id, p.classification
*/

/* C1
SELECT c.date, COUNT(c.id)
FROM cable c, privacy p
WHERE 
	c.privacy_id = p.id AND
    p.classification LIKE ('%Secret%')
GROUP BY c.date
ORDER BY COUNT(c.id) DESC
*/

/* C2
SELECT c.date, COUNT(c.id) AS Stevilo
FROM cable c, privacy p
WHERE 
	c.privacy_id = p.id AND
    p.classification LIKE ('%Secret%')
GROUP BY c.date
HAVING Stevilo > 300
*/

/* D sm zamudu */

/* E
SELECT c.date, count(c.id) AS Stevilo
FROM cable c, privacy p 
WHERE
	c.privacy_id = p.id AND
    p.classification LIKE '%secret%'
GROUP BY c.date
HAVING Stevilo = (
    SELECT MAX(Stevilo) FROM (
        SELECT COUNT(c.id) AS Stevilo
        FROM cable c, privacy p
        WHERE
        	c.privacy_id = p.id AND
        	p.classification LIKE '%secret%'
        GROUP BY c.date
    ) ime_tabele
)
*/

/* 8 NALOGA */

/* A
SELECT c.date, COUNT(c.id) as Stevilo, GROUP_CONCAT(DISTINCT e.name SEPARATOR ',')
FROM cable c, embassy e
WHERE c.embassy_id = e.id
GROUP BY c.date
ORDER BY Stevilo DESC
LIMIT 10
OFFSET 10

*/

/* C
SELECT (
    SELECT COUNT(DISTINCT c1.embassy_id)
    FROM cable c1, cable c2, reference r
    WHERE 
    	c1.id = r.cable_id AND
    	c2.id = r.ref_cable_id AND
    	c1.embassy_id = c2.embassy_id
) AS Veleposlanistva, (
    SELECT COUNT(DISTINCT r.cable_id)
    FROM reference r
    WHERE
    	r.cable_id = r.ref_cable_id
) as Depese
*/


/*
CREATE DATABASE Social

USE social;
CREATE TABLE oseba (
    id INT NOT NULL AUTO_INCREMENT,
    ime VARCHAR(30) NOT NULL,
    rojstni_dan DATE NULL,
    PRIMARY KEY (id)
)

INSERT INTO oseba (ime, rojstni_dan) VALUES ('Jo≈æe', '1990-08-06')

DELETE FROM Facebook WHERE (oseba_id = 3 AND prijatelj_id = 4) OR (oseba_id = 4 AND prijatelj_id = 3)

CREATE USER 'Misko'@'%' IDENTIFIED BY 'Kranjec.01';
GRANT ALL PRIVILEGES ON social.* TO 'Misko'@'%';
FLUSH PRIVILEGES /* posodobi




